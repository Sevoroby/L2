package main
 
import (
    "fmt"
)
 
func test() (x int) {
    defer func() {
        x++
    }()
    x = 1
    return
}
 
 
func anotherTest() int {
    var x int
    defer func() {
        x++
    }()
    x = 1
    return x
}
 
 
func main() {
    fmt.Println(test())
    fmt.Println(anotherTest())
}

Программа выведет 2 в первой строке и 1 во второй строке. В первой функции test() анонимная функция с помощью оператора defer помещается в конец стекового фрейма 
и выполняется после оператора return. Поскольку возвращаемое значение x именованное, то оно может инкрементироваться после оператора return и поэтому возвращается 2.
А во второй функции anotherTest() возвращается 1, поскольку инкрементирование переменной x происходит после того как она была возвращена, поэтому результат не изменится