package main
 
import (
    "fmt"
    "os"
)
 
func Foo() error {
    var err *os.PathError = nil
    return err
}
 
func main() {
    err := Foo()
    fmt.Println(err)
    fmt.Println(err == nil)
}

Программа выведет 
<nil>
false

Функция Foo() возвращает значение интерфейсного типа error, которое имеет динамический тип *os.PathError, поскольку этот тип реализует
интерфейс error. В первой строчке выводится <nil>, поскольку конкретное значение переменной равно nil и не указывает ни на какой объект. 
Во второй же строчке выводится false, потому что интерфейс имеет динамический тип, то есть не является пустым. 
Пустой интерфейс может содержать значения любого типа, поскольку каждый тип реализует как минимум ноль методов. В данном примере в строчке fmt.Println(err == nil)
вывелось бы true в том случае, если бы динамический тип интерфейса был nil и если бы конкретное значение тоже было nil
